version: "3.8"

services:

  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - staticfiles:/app/data/staticfiles
      - mediafiles:/app/data/mediafiles
      # - frontend:/var/www/frontend
    ports:
      - 5555:5555
      - 15672:15672
      - 80:80
      # - 3000:3000
    depends_on:
      - web_backend
      - flower
      - frontend
    networks:
      - djangonetwork

  web_backend:
    build: 
      context: ../
      dockerfile: ./docker.local/Dockerfile.backend
    container_name: web_backend
    command: ./scripts/start.sh
    volumes:
      - ..:/app
      - staticfiles:/app/data/staticfiles
      - mediafiles:/app/data/mediafiles
    ports:
      - 8000:8000
    env_file:
      - ../.env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=postgres
    depends_on:
      - redis
      - postgres
      - celery_worker
      - celery_beat
      - flower
      - frontend
    links:
      - postgres:postgres
    networks:
      - djangonetwork

  frontend:
    build:
      context: ../SPA
      dockerfile: ../docker.local/Dockerfile.frontend
    container_name: web_frontend
    ports:
      - 3000:3000
    volumes:
      - ..:/app
    networks:
      - djangonetwork

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=data_bureau
      - POSTGRES_PASSWORD=data_bureau123
    healthcheck:
      test: "echo 'SELECT 1;' | psql data_bureau data_bureau"
      timeout: 5s
      interval: 5s
      retries: 30
    networks:
      - djangonetwork

  redis:
    image: redis:7-alpine
    command: --port 6379
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - djangonetwork
    

  celery_worker:
    command: ./scripts/start-celery.sh
    build:
      context: ../
      dockerfile: ./docker.local/Dockerfile.backend
    container_name: celery_worker
    volumes:
      - ..:/app
    env_file:
      - ../.env
    depends_on:
      - redis
      - postgres
    networks:
      - djangonetwork

  celery_beat:
    command: ./scripts/start-beat.sh
    build:
      context: ../
      dockerfile: ./docker.local/Dockerfile.backend
    container_name: celery_beat
    volumes:
      - ..:/app
    env_file:
      - ../.env
    depends_on:
      - redis
      - postgres
    networks:
      - djangonetwork

  flower:
    command: ./scripts/start-flower.sh
    build:
      context: ../
      dockerfile: ./docker.local/Dockerfile.backend
    container_name: celery_flower
    volumes:
      - ..:/app
    env_file:
      - ../.env
    depends_on:
      - redis
      - postgres
    networks:
      - djangonetwork
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    env_file:
      - ../.env
    networks:
      - djangonetwork

volumes:
  postgres_data:
  staticfiles:
  mediafiles:
  frontend:

networks:
  djangonetwork:
      driver: bridge
